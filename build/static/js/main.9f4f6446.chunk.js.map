{"version":3,"sources":["Icon/types.js","Icon/Icon.js","utils.js","components/weatherHistoryCards/weatherHistoryCards.js","components/WeatherCard/WeatherCard.js","App/App.js","index.js"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","type","weatherType","this","props","react_default","a","createElement","className","concat","iconSize","small","medium","large","size","React","Component","getDateFromDT","dt","format","moment","sliceTemp","temp","substring","WeatherHistoryCards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","weatherForecast","list","map","key","index","toString","Icon_Icon","main","toLowerCase","day","WeatherCard","weatherToday","tempDay","city","name","weatherHistoryCards_WeatherHistoryCards","App","fetchWeatherData","AOS","init","fetch","json","data","setState","dataIsEmpy","keys","length","data-aos","data-aos-easing","WeatherCard_WeatherCard","autoPlay","muted","loop","src","App_Loader","Loader","ReactDOM","render","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f4f6446.chunk.js","sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import moment from \"moment\";\n\nexport const API_KEY = \"47fe20af59af3bbf2a3b306a18fdb1d7\";\n\nexport const getDateFromDT = (dt, format) => {\n  return moment(dt * 1000).format(format);\n};\n\nexport const sliceTemp = temp => {\n  temp += \"\";\n  let slicedString = temp.substring(0, 2);\n  return slicedString;\n};\n","import React from \"react\";\nimport Icon from \"../../Icon/index\";\nimport { getDateFromDT, sliceTemp } from \"../../utils\";\n\nexport default class WeatherHistoryCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n  }\n\n  render() {\n    const { weather } = this.props;\n    const weatherForecast = weather.list;\n\n    return (\n      <div className='weekHistoryCards'>\n        {weatherForecast.map((key, index) => (\n          <div key={key.dt.toString()} className='historyCard'>\n            <h4>{getDateFromDT(weatherForecast[index].dt, \"MM\")}</h4>\n            <Icon\n              size='small'\n              weatherType={weatherForecast[index].weather[0].main.toLowerCase()}\n            />\n            <h5>{sliceTemp(weatherForecast[index].temp.day)}°</h5>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Icon from \"../../Icon/index\";\nimport WeatherHistoryCards from \"../weatherHistoryCards/weatherHistoryCards\";\nimport { getDateFromDT, sliceTemp } from \"../../utils\";\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const weather = this.props.weather;\n\n    if (!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const tempDay = weatherToday.temp.day;\n\n    return (\n      <div className='weatherCardLEftSide'>\n        <section className='weatherCardLEftSide__inner'>\n          <div className='topLine'>\n            <div className='topLine__leftSide'>\n              <h1>\n                {getDateFromDT(weatherToday.dt, \"dddd\")} &nbsp;\n                {getDateFromDT(weatherToday.dt, \"D\")}\n              </h1>\n              <span>{getDateFromDT(weatherToday.dt, \"MMMM\")}</span>\n            </div>\n            <div className='cityName'>{weather.city.name}</div>\n          </div>\n          <div className='curentTemperature'>\n            <span>{sliceTemp(tempDay)}°</span>\n            <span className='mainIcon'>\n              <Icon\n                size='large'\n                weatherType={weatherToday.weather[0].main.toLowerCase()}\n              />\n            </span>\n          </div>\n        </section>\n        <WeatherHistoryCards weather={weather} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport WeatherCard from \"../components/WeatherCard/WeatherCard\";\nimport \"./App.css\";\nimport { API_KEY } from \".././utils\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n    AOS.init();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast/daily?q=Odessa&units=metric&cnt=7&appid=${API_KEY}`\n    );\n    const data = await json.json();\n\n    this.setState({ weather: data });\n  }\n\n  render() {\n    let data = this.state.weather;\n    let dataIsEmpy = Object.keys(data).length > 0;\n\n    return (\n      <div className='base'>\n        {!dataIsEmpy ? (\n          <Loader />\n        ) : (\n          <main\n            className='content'\n            data-aos='zoom-out'\n            data-aos-easing='ease-in-out'>\n            <WeatherCard weather={this.state.weather} />\n\n            <div className='weatherCardRightSide'>\n              <div className='video__background'>\n                <video className='video_content' autoPlay muted loop>\n                  <source src='./video/wind2.webm' type='video/webm'></source>\n                  <source src='./video/wind2.mp4' type='video/mp4'></source>\n                </video>\n              </div>\n            </div>\n          </main>\n        )}\n      </div>\n    );\n  }\n}\n\nlet Loader = () => {\n  return (\n    <div className='loader'>\n      <div>\n        <div>\n          <div>\n            <div>\n              <div>\n                <div></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Icon/wu-icons-style.min.css';\nimport App from './App/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}