{"version":3,"sources":["Icon/types.js","Icon/Icon.js","utils.js","WeatherCard/components/weatherHistoryCards.js","WeatherCard/WeatherCard.js","App/App.js","index.js"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","type","weatherType","this","props","react_default","a","createElement","className","concat","iconSize","small","medium","large","size","React","Component","getDateFromDT","dt","format","moment","sliceTemp","temp","substring","WeatherHistoryCards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","weatherForecast","list","weatherToday","map","keyName","i","Icon_Icon","main","toLowerCase","day","WeatherCard","fetchWeatherData","bind","assertThisInitialized","fetch","json","data","setState","console","log","tempDay","weatherHistoryCards_WeatherHistoryCards","App","WeatherCard_WeatherCard","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.79d37536.chunk.js","sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import moment from 'moment';\n\nexport const API_KEY = \"47fe20af59af3bbf2a3b306a18fdb1d7\";\n\nexport const getDateFromDT = (dt, format) => {\n    return moment(dt * 1000).format(format);\n}\n\n\n\n\nexport const sliceTemp = (temp) => {\n    temp += '';\n    let slicedString = temp.substring(0, 2);\n    return slicedString;\n}","import React from 'react';\nimport Icon from '../../Icon/index';\nimport { getDateFromDT, sliceTemp } from '../../utils';\n\n\n\nexport default class WeatherHistoryCards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { weather: {} };\n    }\n\n\n\n    render() {\n\n        const { weather } = this.props;\n\n\n        const weatherForecast = weather.list;\n        const weatherToday = weather.list[0];\n        // const tempDay = weatherToday.temp.day;\n\n        // console.log(weatherToday);\n\n\n        return (\n            <div className='weekHistoryCards'>\n\n\n                {weatherForecast.map((keyName, i) => (\n\n                    <div className='historyCard'>\n                        <h4>{getDateFromDT(weatherForecast[i].dt, 'ddd')}</h4>\n                        <Icon size=\"small\" weatherType={weatherToday.weather[0].main.toLowerCase()} />\n                        <h5>{sliceTemp(weatherForecast[i].temp.day)}°</h5>\n                    </div>\n\n                ))}\n\n\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport Icon from '../Icon/index';\nimport { API_KEY, getDateFromDT, sliceTemp } from '../utils';\nimport WeatherHistoryCards from './components/weatherHistoryCards'\n\n\nexport default class WeatherCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { weather: {} };\n\n        this.fetchWeatherData = this.fetchWeatherData.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchWeatherData();\n    }\n\n    async fetchWeatherData() {\n        const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=${API_KEY}`);\n        const data = await json.json();\n\n        this.setState({ weather: data });\n        console.log(data)\n    }\n\n\n    render() {\n        const { weather } = this.state;\n\n        if (!weather.list) {\n            return null;\n        }\n\n        const weatherToday = weather.list[0];\n        const tempDay = weatherToday.temp.day;\n\n\n        return (\n\n            <div className='weatherCardLEftSide'>\n                <section className='container'>\n                    <div className='mainDate'>\n                        <h1>\n                            {getDateFromDT(weatherToday.dt, 'ddd')} &nbsp;\n                            {getDateFromDT(weatherToday.dt, 'D')}\n                        </h1>\n                        <span>{getDateFromDT(weatherToday.dt, 'MMMM')}</span>\n                    </div>\n                    <div className='curentTemperature'>\n                        <span>{sliceTemp(tempDay)}°</span>\n                        <span className='mainIcon'>\n                            <Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} />\n                        </span>\n                    </div>\n                </section>\n                <WeatherHistoryCards weather={this.state.weather} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport WeatherCard from '../WeatherCard/index';\n\nfunction App() {\n  return (\n    <div className=\"base\">\n      <main className=\"content\">\n        <WeatherCard />\n\n        <div className='weatherCardRightSide'>\n\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Icon/wu-icons-style.min.css';\nimport App from './App/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}