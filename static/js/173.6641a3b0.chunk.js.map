{"version":3,"file":"static/js/173.6641a3b0.chunk.js","mappings":"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","sources":["Icon/types.js","Icon/Icon.js","components/WeatherCard/WeatherCard.js","components/WeatherCard/usePosition.js"],"sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport Icon from \"../../Icon/index\";\nimport { getDateFromDT, sliceTemp } from \"../../utils\";\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport { API_KEY } from \"../../utils\";\nimport { usePosition } from './usePosition';\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\n\nconst WeatherHistoryCards = lazy(() => import(\"../weatherHistoryCards/weatherHistoryCards\"));\n\nconst WeatherCard = (props) => {\n  const [weather, setWeather] = useState();\n  const { lat, lon, error } = usePosition();\n\n  useEffect(() => {\n    setWeather(props.weather);\n  }, [props])\n\n  useEffect(() => {\n    if (lat) {\n      AOS.init();\n      getWeatherForCurrentLocation();\n    }\n\n  }, [lat])\n\n\n  const getWeatherForCurrentLocation = async () => {\n    const URL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n    const json = await fetch(URL);\n    const data = await json.json();\n    setWeather(data);\n  }\n\n  const weatherToday = weather?.list[0];\n  const tempDay = weatherToday?.temp?.day;\n\n  return (\n    <div className='weatherCardLEftSide'>\n      {weatherToday && <section className='weatherCardLEftSide__inner'>\n        <div className='topLine'>\n          <div className='topLine__leftSide'>\n            <h1>\n              {getDateFromDT(weatherToday.dt, \"dddd\")} &nbsp;\n                {getDateFromDT(weatherToday.dt, \"D\")}\n            </h1>\n            <span>{getDateFromDT(weatherToday.dt, \"MMMM\")}</span>\n          </div>\n          <div className='cityName'>\n            <span>{weather.city.name}</span>\n            {!!lat ? (\n              <div\n                className='locationBtn'\n                data-aos=\"fade-down\"\n                data-aos-easing=\"linear\"\n                data-aos-duration=\"100\"\n                data-aos-delay=\"500\"\n              >\n                <LocationOnOutlinedIcon />\n              </div>)\n              : (\n                <div className='locationBtn'> </div>\n              )\n            }\n          </div>\n\n        </div>\n        <div className='curentTemperature'>\n          <span>{sliceTemp(tempDay)}Â°</span>\n          <span className='mainIcon'>\n            <Icon\n              size='large'\n              weatherType={weatherToday.weather[0].main.toLowerCase()}\n            />\n          </span>\n        </div>\n      </section>}\n\n      <Suspense fallback={'Loading...'} >\n        <WeatherHistoryCards weather={weather} />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default WeatherCard;","import { useState, useEffect } from 'react';\nexport const usePosition = () => {\n\tconst [position, setPosition] = useState({});\n\tconst [error, setError] = useState(null);\n\n\tconst onChange = ({ coords }) => {\n\t\tsetPosition({\n\t\t\tlat: coords.latitude,\n\t\t\tlon: coords.longitude,\n\t\t});\n\t};\n\tconst onError = (error) => {\n\t\tsetError(error.message);\n\t};\n\tuseEffect(() => {\n\t\tconst geo = navigator.geolocation;\n\t\tif (!geo) {\n\t\t\tsetError('Geolocation is not supported');\n\t\t\treturn;\n\t\t}\n\t\tconst watcher = geo.watchPosition(onChange, onError);\n\t\treturn () => geo.clearWatch(watcher);\n\t}, []);\n\treturn { ...position, error };\n}"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","small","medium","large","this","props","size","value","type","weatherType","_jsx","className","concat","iconSize","React","WeatherHistoryCards","lazy","_weatherToday$temp","_useState","useState","_useState2","_slicedToArray","weather","setWeather","_usePosition","position","setPosition","_useState3","_useState4","error","setError","onChange","_ref","coords","lat","latitude","lon","longitude","onError","message","useEffect","geo","navigator","geolocation","watcher","watchPosition","clearWatch","_objectSpread","usePosition","AOS","getWeatherForCurrentLocation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","json","data","wrap","_context","prev","next","API_KEY","fetch","sent","stop","weatherToday","list","tempDay","temp","day","_jsxs","children","getDateFromDT","dt","city","name","LocationOnOutlinedIcon","sliceTemp","main","toLowerCase","Suspense","fallback"],"sourceRoot":""}