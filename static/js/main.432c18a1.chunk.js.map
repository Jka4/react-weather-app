{"version":3,"sources":["Icon/types.js","Icon/Icon.js","utils.js","WeatherCard/components/weatherHistoryCards.js","WeatherCard/WeatherCard.js","App/App.js","index.js"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","type","weatherType","this","props","react_default","a","createElement","className","concat","iconSize","small","medium","large","size","React","Component","getDateFromDT","dt","format","moment","sliceTemp","temp","substring","geo","lat","lon","regenerator_default","async","_context2","prev","next","navigator","geolocation","getCurrentPosition","position","_context","awrap","coords","latitude","sent","longitude","stop","setTimeout","console","log","abrupt","WeatherHistoryCards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","weatherForecast","list","map","key","index","toString","Icon_Icon","main","toLowerCase","day","WeatherCard","fetchWeatherData","bind","assertThisInitialized","fetch","json","data","setState","weatherToday","tempDay","city","name","weatherHistoryCards_WeatherHistoryCards","App","WeatherCard_WeatherCard","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.432c18a1.chunk.js","sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import moment from \"moment\";\n\nexport const API_KEY = \"47fe20af59af3bbf2a3b306a18fdb1d7\";\n\nexport const getDateFromDT = (dt, format) => {\n  return moment(dt * 1000).format(format);\n};\n\nexport const sliceTemp = temp => {\n  temp += \"\";\n  let slicedString = temp.substring(0, 1);\n  return slicedString;\n};\n\nexport let geo = { lat: 0, lon: 0 };\n\nlet geoPosition = async () => {\n  navigator.geolocation.getCurrentPosition(async function(position) {\n    let lat = await position.coords.latitude;\n    let lon = await position.coords.longitude;\n\n    geo.lat = lat;\n    geo.lon = lon;\n  });\n\n  let fetch = () => {\n    console.log(`lat: ${geo.lat}, lon: ${geo.lon}`);\n  };\n\n  setTimeout(fetch, 10);\n  return geo;\n};\ngeoPosition();\n","import React from \"react\";\nimport Icon from \"../../Icon/index\";\nimport { getDateFromDT, sliceTemp } from \"../../utils\";\n\nexport default class WeatherHistoryCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n  }\n\n  render() {\n    const { weather } = this.props;\n    const weatherForecast = weather.list;\n\n    // console.log(weatherForecast); \n\n    return (\n      <div className=\"weekHistoryCards\">\n        {weatherForecast.map((key, index) => (\n          <div key={key.dt.toString()} className=\"historyCard\">\n            <h4>{getDateFromDT(weatherForecast[index].dt, \"ddd\")}</h4>\n            <Icon\n              size=\"small\"\n              weatherType={weatherForecast[index].weather[0].main.toLowerCase()}\n            />\n            <h5>{sliceTemp(weatherForecast[index].temp.day)}°</h5>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Icon from \"../Icon/index\";\nimport { API_KEY, getDateFromDT, sliceTemp } from \"../utils\";\nimport WeatherHistoryCards from \"./components/weatherHistoryCards\";\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: {}\n    };\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast/daily?q=Odessa&units=metric&cnt=7&appid=${API_KEY}`\n    );\n\n    const data = await json.json();\n\n    this.setState({ weather: data });\n  }\n\n  render() {\n    const { weather } = this.state;\n\n    if (!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const tempDay = weatherToday.temp.day;\n\n    return (\n      <div className=\"weatherCardLEftSide\">\n        <section className=\"container\">\n          <div className=\"cityName\">{weather.city.name}</div>\n\n          <div className=\"mainDate\">\n            <h1>\n              {getDateFromDT(weatherToday.dt, \"dddd\")} &nbsp;\n              {getDateFromDT(weatherToday.dt, \"D\")}\n            </h1>\n            <span>{getDateFromDT(weatherToday.dt, \"MMMM\")}</span>\n          </div>\n          <div className=\"curentTemperature\">\n            <span>{sliceTemp(tempDay)}°</span>\n            <span className=\"mainIcon\">\n              <Icon\n                size=\"large\"\n                weatherType={weatherToday.weather[0].main.toLowerCase()}\n              />\n            </span>\n          </div>\n        </section>\n        <WeatherHistoryCards weather={this.state.weather} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport WeatherCard from '../WeatherCard/index';\n\nfunction App() {\n\n\n\n\n\n\n  return (\n    <div className=\"base\">\n      <main className=\"content\">\n\n\n        <WeatherCard />\n\n        <div className='weatherCardRightSide'></div>\n\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./Icon/wu-icons-style.min.css\";\nimport App from \"./App/index\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}