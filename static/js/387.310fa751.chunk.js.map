{"version":3,"file":"static/js/387.310fa751.chunk.js","mappings":"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","sources":["Icon/types.js","Icon/Icon.js","components/WeatherCard/WeatherCard.js"],"sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport Icon from '../../Icon/index';\nimport { getDateFromDT, sliceTemp } from '../../utils';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport { API_KEY } from '../../utils';\nimport { usePosition } from './usePosition';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nconst WeatherHistoryCards = lazy(() => import('../weatherHistoryCards/weatherHistoryCards'));\n\nconst WeatherCard = (props) => {\n  const [weather, setWeather] = useState({ list: [], city: { name: null } });\n  const { lat, lon } = usePosition();\n\n  useEffect(() => {\n    setWeather(props.weather);\n  }, [props]);\n\n  useEffect(() => {\n    if (lat) {\n      AOS.init();\n      getWeatherForCurrentLocation();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lat, lon]);\n\n  const getWeatherForCurrentLocation = async () => {\n    const URL = `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n    const json = await fetch(URL);\n    const data = await json.json();\n    setWeather(data);\n  };\n\n  const weatherToday = weather?.list[0];\n  const tempDay = weatherToday?.temp?.day;\n\n  return (\n    <div className=\"weatherCardLEftSide\">\n      {weatherToday && (\n        <section className=\"weatherCardLEftSide__inner\">\n          <div className=\"topLine\">\n            <div className=\"topLine__leftSide\">\n              <h1>\n                {getDateFromDT(weatherToday.dt, 'dddd')} &nbsp;\n                {getDateFromDT(weatherToday.dt, 'D')}\n              </h1>\n              <span>{getDateFromDT(weatherToday.dt, 'MMMM')}</span>\n            </div>\n            <div className=\"cityName\">\n              <span>{weather.city.name}</span>\n              {!!lat ? (\n                <div\n                  className=\"locationBtn\"\n                  data-aos=\"fade-down\"\n                  data-aos-easing=\"linear\"\n                  data-aos-duration=\"100\"\n                  data-aos-delay=\"500\"\n                >\n                  <LocationOnOutlinedIcon />\n                </div>\n              ) : (\n                <div className=\"locationBtn\"> </div>\n              )}\n            </div>\n          </div>\n          <div className=\"curentTemperature\">\n            <span>{sliceTemp(tempDay)}Â°</span>\n            <span className=\"mainIcon\">\n              <Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} />\n            </span>\n          </div>\n        </section>\n      )}\n\n      <Suspense fallback={'Loading...'}>\n        <WeatherHistoryCards weather={weather} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","small","medium","large","this","props","size","value","type","weatherType","_jsx","className","concat","iconSize","React","WeatherHistoryCards","lazy","_weatherToday$temp","_useState","useState","list","city","name","_useState2","_slicedToArray","weather","setWeather","_usePosition","usePosition","lat","lon","useEffect","AOS","getWeatherForCurrentLocation","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","json","data","wrap","_context","prev","next","API_KEY","fetch","sent","stop","weatherToday","tempDay","temp","day","_jsxs","children","getDateFromDT","dt","LocationOnOutlinedIcon","sliceTemp","main","toLowerCase","Suspense","fallback"],"sourceRoot":""}